# -*- coding: utf-8 -*-

"""
(Description)

Created on Jul 27, 2015
"""
from sqlalchemy.orm import relationship
from sqlalchemy.schema import Column, ForeignKey
from sqlalchemy.sql.schema import Table
from sqlalchemy.types import Boolean, Integer

from ce1sus.common import merge_dictionaries
from ce1sus.db.classes.common.baseelements import Entity
from ce1sus.db.classes.cstix.common.datetimewithprecision import DateTimeWithPrecision
from ce1sus.db.classes.cstix.common.structured_text import StructuredText
from ce1sus.db.classes.internal.core import BigIntegerType, UnicodeType
from ce1sus.db.common.session import Base


__author__ = 'Weber Jean-Paul'
__email__ = 'jean-paul.weber@govcert.etat.lu'
__copyright__ = 'Copyright 2013-2014, GOVCERT Luxembourg'
__license__ = 'GPL v3+'

_REL_VULNERABILITY_STRUCTUREDTEXT = Table('rel_vulnerability_structuredtext', getattr(Base, 'metadata'),
                                       Column('rtvulnerabilityst_id', BigIntegerType, primary_key=True, nullable=False, index=True),
                                       Column('vulnerability_id',
                                              BigIntegerType,
                                              ForeignKey('vulnerabilitys.vulnerability_id',
                                                         ondelete='cascade',
                                                         onupdate='cascade'),
                                              index=True,
                                              nullable=False),
                                       Column('structuredtext_id',
                                             BigIntegerType,
                                             ForeignKey('structuredtexts.structuredtext_id',
                                                        ondelete='cascade',
                                                        onupdate='cascade'),
                                              nullable=False,
                                              index=True)
                                       )

_REL_VULNERABILITY_STRUCTUREDTEXT_SHORT = Table('rel_vulnerability_structuredtext_short', getattr(Base, 'metadata'),
                                       Column('rtvulnerabilityst_id', BigIntegerType, primary_key=True, nullable=False, index=True),
                                       Column('vulnerability_id',
                                              BigIntegerType,
                                              ForeignKey('vulnerabilitys.vulnerability_id',
                                                         ondelete='cascade',
                                                         onupdate='cascade'),
                                              index=True,
                                              nullable=False),
                                       Column('structuredtext_id',
                                             BigIntegerType,
                                             ForeignKey('structuredtexts.structuredtext_id',
                                                        ondelete='cascade',
                                                        onupdate='cascade'),
                                              nullable=False,
                                              index=True)
                                       )

_REL_VULNERABILITY_DIS_DATETIMEWITHPRECISION = Table('rel_vulnerablility_dis_datetimewithprecision', getattr(Base, 'metadata'),
                                              Column('rvdisdwp_id', BigIntegerType, primary_key=True, nullable=False, index=True),
                                              Column('vulnerability_id',
                                                     BigIntegerType,
                                                     ForeignKey('vulnerabilitys.vulnerability_id',
                                                                ondelete='cascade',
                                                                onupdate='cascade'),
                                                     index=True,
                                                     nullable=False),
                                              Column('datetimewithprecision_id',
                                                     BigIntegerType,
                                                     ForeignKey('datetimewithprecisions.datetimewithprecision_id',
                                                                ondelete='cascade',
                                                                onupdate='cascade'),
                                                     nullable=False,
                                                     index=True)
                                              )

_REL_VULNERABILITY_PUB_DATETIMEWITHPRECISION = Table('rel_vulnerablility_pub_datetimewithprecision', getattr(Base, 'metadata'),
                                              Column('rvoubdwp_id', BigIntegerType, primary_key=True, nullable=False, index=True),
                                              Column('vulnerability_id',
                                                     BigIntegerType,
                                                     ForeignKey('vulnerabilitys.vulnerability_id',
                                                                ondelete='cascade',
                                                                onupdate='cascade'),
                                                     index=True,
                                                     nullable=False),
                                              Column('datetimewithprecision_id',
                                                     BigIntegerType,
                                                     ForeignKey('datetimewithprecisions.datetimewithprecision_id',
                                                                ondelete='cascade',
                                                                onupdate='cascade'),
                                                     nullable=False,
                                                     index=True)
                                              )

class VulnReference(Entity, Base):
  # can be anyurl
  value = Column('anyurl', UnicodeType(255))
  vulnerability_id = Column('vulnerability_id', BigIntegerType, ForeignKey('vulnerabilitys.vulnerability_id', onupdate='cascade', ondelete='cascade'), nullable=False, index=True)

  _PARENTS = ['vulnerability']

  def to_dict(self, cache_object):
    result = {'value':self.convert_value(self.value),
              'vulnerability_id': self.convert_value(self.vulnerability_id)
              }

    parent_dict = Entity.to_dict(self, cache_object)
    return merge_dictionaries(result, parent_dict)

class Vulnerability(Entity, Base):

  is_known = Column('is_known', Boolean, default=None)
  is_publicly_acknowledged = Column('is_publicly_acknowledged', Boolean, default=None)
  title = Column('title', UnicodeType(255), index=True, nullable=True)
  description = relationship(StructuredText, secondary=_REL_VULNERABILITY_STRUCTUREDTEXT, uselist=False, backref='vulnerability_description')
  short_description = relationship(StructuredText, secondary=_REL_VULNERABILITY_STRUCTUREDTEXT_SHORT, uselist=False, backref='vulnerability_short_description')

  cve_id = Column('cve_id', Integer)
  osvdb_id = Column('osvdb_id', Integer)

  # The Source field describes the source of the CVE or OSVDB as a textual description or URL.
  source = Column('source', UnicodeType(255))

  # TODO cvss_score
  # cvss_score = None
  discovered_datetime = relationship(DateTimeWithPrecision, secondary=_REL_VULNERABILITY_DIS_DATETIMEWITHPRECISION, uselist=False, backref='vulnerability_publish')
  published_datetime = relationship(DateTimeWithPrecision, secondary=_REL_VULNERABILITY_PUB_DATETIMEWITHPRECISION, uselist=False, backref='vulnerability_discovered')
  # TODO: affected_software
  # affected_software = None
  references = relationship(VulnReference, backref='vulnerability')

  exploittarget_id = Column('exploittarget_id', BigIntegerType, ForeignKey('exploittargets.exploittarget_id', onupdate='cascade', ondelete='cascade'), nullable=False, index=True)

  _PARENTS = ['exploit_target']

  def to_dict(self, cache_object):
    if cache_object.complete:
      result = {'is_known':self.convert_value(self.is_known),
                'is_publicly_acknowledged': self.convert_value(self.is_publicly_acknowledged),
                'title':self.convert_value(self.title),
                'description': self.attribute_to_dict(self.description, cache_object),
                'short_description': self.attribute_to_dict(self.short_description, cache_object),
                'is_publicly_acknowledged': self.convert_value(self.is_publicly_acknowledged),
                'cve_id':self.convert_value(self.cve_id),
                'osvdb_id': self.convert_value(self.osvdb_id),
                'source': self.convert_value(self.source),
                'discovered_datetime': self.convert_value(self.discovered_datetime),
                'published_datetime': self.convert_value(self.published_datetime),
                'references': self.attributelist_to_dict(self.references, cache_object)
                }
    else:
      result = {'title':self.convert_value(self.title),
                'cve_id':self.convert_value(self.cve_id),
                'osvdb_id': self.convert_value(self.osvdb_id),
                'source': self.convert_value(self.source),
                }

    parent_dict = Entity.to_dict(self, cache_object)
    return merge_dictionaries(result, parent_dict)
